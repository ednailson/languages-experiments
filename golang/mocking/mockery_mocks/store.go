// Code generated by mockery v2.7.4. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	time "time"
)

// Store is an autogenerated mock type for the Store type
type Store struct {
	mock.Mock
}

// Close provides a mock function with given fields: at
func (_m *Store) Close(at time.Time) error {
	ret := _m.Called(at)

	var r0 error
	if rf, ok := ret.Get(0).(func(time.Time) error); ok {
		r0 = rf(at)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: name
func (_m *Store) Get(name string) (string, error) {
	ret := _m.Called(name)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Open provides a mock function with given fields: at
func (_m *Store) Open(at time.Time) error {
	ret := _m.Called(at)

	var r0 error
	if rf, ok := ret.Get(0).(func(time.Time) error); ok {
		r0 = rf(at)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Sell provides a mock function with given fields: id, quantity
func (_m *Store) Sell(id string, quantity int) error {
	ret := _m.Called(id, quantity)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, int) error); ok {
		r0 = rf(id, quantity)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
